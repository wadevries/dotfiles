export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

alias ll='ls -laG'
alias dc='docker compose'
alias gs='git switch'
alias vpn='security find-generic-password -wl "fortinet vpn" | sudo openconnect --config ~/.config/openconnect'

eval "$(/opt/homebrew/bin/brew shellenv)"

if [[ $TERMINAL_EMULATOR == "JetBrains-JediTerm" ]]
then
    export PS1="\w> "
else
    export PS1="\[\e[32m\u\e[0m \[\e[2m\t\]\e[0m \[\e[36m\w\]\[\e[0m\] \e[93m\$(git branch 2>/dev/null | sed -n \"s/* \(.*\)/\1 /p\")\e[0m\nðŸ¦„ "
fi


export PROJECT_HOME=~/dev

export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init --path)"
eval "$(pyenv virtualenv-init -)"

if [ -f ~/.bashrc ]; then
   source ~/.bashrc
fi

test -e "${HOME}/.iterm2_shell_integration.bash" && source "${HOME}/.iterm2_shell_integration.bash"

# Disable Sentry logging from local node
export SENTRY_ENVIRONMENT=development
export SENTRY_DISABLED=true

# My utils
if [ -f ~/.bash_utils ]; then
   source ~/.bash_utils
fi

export BASH_SILENCE_DEPRECATION_WARNING=1
export PATH="/opt/homebrew/opt/openjdk/bin:$PATH"

export PATH="${HOME}/local/bin:$PATH"


# nvm
export NVM_DIR="$HOME/.nvm"
[ -s "/opt/homebrew/opt/nvm/nvm.sh" ] && \. "/opt/homebrew/opt/nvm/nvm.sh"  # This loads nvm
[ -s "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" ] && \. "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion
